/*
문제 설명
초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 
가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요.

제한사항
prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.
prices의 길이는 2 이상 100,000 이하입니다.
*/
import java.util.*;

public class TestQuest {
	public int[] solution(int[] prices) {
        int[] answer = new int[prices.length];
        int size = prices.length;
        ArrayList<Integer> list = new ArrayList<Integer>();
        for(int i=0;i<size;i++) {
        	for(int x=i+1;x<size;x++) {
        		answer[i]++;
        		if(prices[x]<prices[i]) break;
            }
        }
        return answer;
    }
	
	public static void main(String[] args) {
		TestQuest test1 = new TestQuest();
        int[] num = test1.solution(new int[]{1, 2, 3, 2, 3});
        System.out.println("정답 : "+Arrays.toString(num));
		}
	}
/*
 * 
    public int[] solution(int[] prices) {
        Stack<Integer> beginIdxs = new Stack<>();
        int i=0;
        int[] terms = new int[prices.length];

        beginIdxs.push(i);
        for (i=1; i<prices.length; i++) {
            while (!beginIdxs.empty() && prices[i] < prices[beginIdxs.peek()]) {
                int beginIdx = beginIdxs.pop();
                terms[beginIdx] = i - beginIdx;
            }
            beginIdxs.push(i);
        } 
        while (!beginIdxs.empty()) {
            int beginIdx = beginIdxs.pop();
            terms[beginIdx] = i - beginIdx - 1;
        }

        return terms;
    }
 * */
