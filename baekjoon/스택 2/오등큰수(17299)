/*
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Stack;
import java.util.HashMap;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        // Read input
        int n = Integer.parseInt(br.readLine());
        String[] input = br.readLine().split(" ");
        
        int[] array = new int[n];
        int[] result = new int[n];
        HashMap<Integer, Integer> frequencyMap = new HashMap<>();
        
        // Initialize array and frequency map
        for (int i = 0; i < n; i++) {
            array[i] = Integer.parseInt(input[i]);
            frequencyMap.put(array[i], frequencyMap.getOrDefault(array[i], 0) + 1);
        }
        
        Stack<Integer> stack = new Stack<>();
        
        // Process each element to find the NGF
        for (int i = 0; i < n; i++) {
            int currentFrequency = frequencyMap.get(array[i]);
            while (!stack.isEmpty() && frequencyMap.get(array[stack.peek()]) < currentFrequency) {
                result[stack.pop()] = array[i];
            }
            stack.push(i);
        }
        
        // Remaining elements in the stack have no NGF
        while (!stack.isEmpty()) {
            result[stack.pop()] = -1;
        }
        
        // Output the result
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < n; i++) {
            sb.append(result[i]).append(" ");
        }
        
        System.out.println(sb.toString().trim());
    }
}

*/
